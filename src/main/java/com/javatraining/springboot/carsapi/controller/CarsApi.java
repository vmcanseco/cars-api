/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.javatraining.springboot.carsapi.controller;

import com.javatraining.springboot.carsapi.dto.CarDTO;
import com.javatraining.springboot.carsapi.dto.PeopleDTO;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.annotation.Generated;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-01-27T15:27:05.800-06:00[America/Chicago]")
@Validated
public interface CarsApi {

    /**
     * POST /cars : Add a new car
     * Create a car
     *
     * @param car Create a Car (required)
     * @return Successfull operation (status code 201)
     *         or Unexpected errror (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/cars",
        produces = { "application/json", "application/xml" },
        consumes = { "application/json", "application/xml" }
    )
    ResponseEntity<CarDTO> createCar(
         @Valid @RequestBody CarDTO car
    );


    /**
     * DELETE /cars/{car_vin} : Delete a car by VIN
     * Delete a person by VIN
     *
     * @param carVin Car VIN (required)
     * @return Successfull operation (status code 204)
     *         or Car not found (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/cars/{car_vin}"
    )
    ResponseEntity<Void> deleteCar(
         @PathVariable("car_vin") String carVin
    );


    /**
     * GET /cars/{car_vin}/people : Find all people owning a car
     * Returns all people associate to a car
     *
     * @param carVin Car VIN (required)
     * @return Successfull operation (status code 200)
     *         or Car not found (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/cars/{car_vin}/people",
        produces = { "application/json", "application/xml" }
    )
    ResponseEntity<List<PeopleDTO>> getAllCarPeople(
         @PathVariable("car_vin") String carVin
    );


    /**
     * GET /cars : Get all cars
     * Returns all cars
     *
     * @return successful operation (status code 200)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/cars",
        produces = { "application/json", "application/xml" }
    )
    ResponseEntity<List<CarDTO>> getAllCars(
        
    );


    /**
     * GET /cars/{car_vin} : Find car by VIN
     * Return a single car
     *
     * @param carVin Car VIN (required)
     * @return Successfull operation (status code 200)
     *         or Car not found (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/cars/{car_vin}",
        produces = { "application/json", "application/xml" }
    )
    ResponseEntity<CarDTO> getCarByVin(
         @PathVariable("car_vin") String carVin
    );


    /**
     * PUT /cars/{car_vin} : Update an existing car
     * Upate an existing car
     *
     * @param carVin Car VIN (required)
     * @param car Update a car (required)
     * @return Successfull operation (status code 200)
     *         or Car not found (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/cars/{car_vin}",
        produces = { "application/json", "application/xml" },
        consumes = { "application/json", "application/xml" }
    )
    ResponseEntity<CarDTO> updateCar(
         @PathVariable("car_vin") String carVin,
         @Valid @RequestBody CarDTO car
    );

}
